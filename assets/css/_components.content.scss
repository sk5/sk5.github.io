// Content elements
// ------------------------------------------------------------


.content {
    // CSS GRID: Target browsers that support the `display: grid` and `grid-template-columns` (maybe only using repeat?) properties.
    // These properties are exclusive to browsers that support the `display: grid` and `grid-template-columns` properties.
    @supports (display: grid) and (grid-template-columns: repeat(2, 1fr)) {
        grid-column: 1 / span 3;
        grid-row: 2;
    }
    //
    font-family: $body-text;
    color: $black;
    //
    &__header {
        position: relative;
        padding: 2rem 0;
        //
        &:before {
            content: "";
            position: absolute;
            z-index: -1;
            top: 0;
            right: -20vw;
            bottom: 0;
            left: -20vw;
            background: $black;
            background-image: url(../images/polygon-background.svg), linear-gradient(30deg, $yellow 0%, $orange 33%, $red 66%, $purple 100%);
            background-size: cover;
        }
    }
    //
    &__title {
        margin: 0;
        font-family: $nav-text;
        font-size: 3rem;
        font-weight: 700;
        color: white;
        //
        .sub-title {
            display: block;
            margin-top: .5rem;
            font-size: 1rem;
        }
    }
    //
    h3,
    h4,
    h5 {
        margin: 1em 0 .5em 0;
        font-family: $nav-text;
    }
    //
    h3 {
        font-size: 2.25rem;
        color: darken($red, 30%);
    }
    //
    h4 {
        font-size: 2rem;
        color: darken($red, 20%);
    }
    //
    p {
        font-size: 1.4125rem;
    }
    //
    &__charity-breakdown {
        // CSS GRID: Target browsers that support the `display: grid` and `grid-template-columns` (maybe only using repeat?) properties.
        // These properties are exclusive to browsers that support the `display: grid` and `grid-template-columns` properties.
        @supports (display: grid) and (grid-template-columns: repeat(2, 1fr)) {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            grid-template-rows: auto; // 25rem;
            grid-gap: 2rem;
        }
        //
        margin: 0;
        padding: 0;
        list-style: none;
    }
}
//
.charity--example {
    padding: 4rem 2rem;
    font-family: $nav-text;
    font-size: 1.4125rem;
    text-align: center;
    color: white;
    //
    &:nth-child(1) {
        // CSS GRID: Target browsers that support the `display: grid` and `grid-template-columns` (maybe only using repeat?) properties.
        // These properties are exclusive to browsers that support the `display: grid` and `grid-template-columns` properties.
        @supports (display: grid) and (grid-template-columns: repeat(2, 1fr)) {
            grid-column: 1;
            grid-row: 1;
        }
        //
        background: $purple;
        background: linear-gradient(30deg, darken($purple, 10%) 0%, darken($purple, 30%) 100%);
    }
    //
    &:nth-child(2) {
        // CSS GRID: Target browsers that support the `display: grid` and `grid-template-columns` (maybe only using repeat?) properties.
        // These properties are exclusive to browsers that support the `display: grid` and `grid-template-columns` properties.
        @supports (display: grid) and (grid-template-columns: repeat(2, 1fr)) {
            grid-column: 2;
            grid-row: 1;
        }
        //
        background: $blue;
        background: linear-gradient(30deg, darken($blue, 10%) 0%, darken($blue, 30%) 100%);
    }
    //
    &:nth-child(3) {
        // CSS GRID: Target browsers that support the `display: grid` and `grid-template-columns` (maybe only using repeat?) properties.
        // These properties are exclusive to browsers that support the `display: grid` and `grid-template-columns` properties.
        @supports (display: grid) and (grid-template-columns: repeat(2, 1fr)) {
            grid-column: 3;
            grid-row: 1;
        }
        //
        background: $green;
        background: linear-gradient(30deg, darken($green, 10%) 0%, darken($green, 30%) 100%);
    }
    //
    strong {
        font-size: 1.75rem;
    }
    //
    span {
        display: block;
        padding-top: 1rem;
        padding-bottom: 1rem;
    }
}